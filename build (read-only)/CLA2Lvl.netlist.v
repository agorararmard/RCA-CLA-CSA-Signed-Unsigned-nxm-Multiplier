/* Generated by Yosys 0.6 (git sha1 UNKNOWN, clang 3.4-1ubuntu3 -fPIC -Os) */

module CLA(A, B, Ci, Co, S, PG, GG);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  input [3:0] A;
  input [3:0] B;
  input Ci;
  output Co;
  output GG;
  output PG;
  output [3:0] S;
  OR2X2 _30_ (
    .A(A[2]),
    .B(B[2]),
    .Y(_00_)
  );
  OAI21X1 _31_ (
    .A(A[1]),
    .B(B[1]),
    .C(_00_),
    .Y(_01_)
  );
  OR2X2 _32_ (
    .A(A[3]),
    .B(B[3]),
    .Y(_02_)
  );
  OAI21X1 _33_ (
    .A(A[0]),
    .B(B[0]),
    .C(_02_),
    .Y(_03_)
  );
  NOR2X1 _34_ (
    .A(_01_),
    .B(_03_),
    .Y(PG)
  );
  NAND2X1 _35_ (
    .A(A[1]),
    .B(B[1]),
    .Y(_04_)
  );
  NAND2X1 _36_ (
    .A(A[0]),
    .B(B[0]),
    .Y(_05_)
  );
  AND2X2 _37_ (
    .A(_04_),
    .B(_05_),
    .Y(_06_)
  );
  NAND2X1 _38_ (
    .A(A[3]),
    .B(B[3]),
    .Y(_07_)
  );
  NAND2X1 _39_ (
    .A(A[2]),
    .B(B[2]),
    .Y(_08_)
  );
  AND2X2 _40_ (
    .A(_07_),
    .B(_08_),
    .Y(_09_)
  );
  OAI21X1 _41_ (
    .A(_01_),
    .B(_06_),
    .C(_09_),
    .Y(_10_)
  );
  AND2X2 _42_ (
    .A(_10_),
    .B(_02_),
    .Y(GG)
  );
  OR2X2 _43_ (
    .A(A[1]),
    .B(B[1]),
    .Y(_11_)
  );
  OR2X2 _44_ (
    .A(A[0]),
    .B(B[0]),
    .Y(_12_)
  );
  INVX1 _45_ (
    .A(Ci),
    .Y(_13_)
  );
  NAND2X1 _46_ (
    .A(_13_),
    .B(_05_),
    .Y(_14_)
  );
  NAND3X1 _47_ (
    .A(_11_),
    .B(_12_),
    .C(_14_),
    .Y(_15_)
  );
  NAND3X1 _48_ (
    .A(_04_),
    .B(_08_),
    .C(_15_),
    .Y(_16_)
  );
  NAND3X1 _49_ (
    .A(_00_),
    .B(_02_),
    .C(_16_),
    .Y(_17_)
  );
  NAND2X1 _50_ (
    .A(_07_),
    .B(_17_),
    .Y(Co)
  );
  OAI21X1 _51_ (
    .A(A[0]),
    .B(B[0]),
    .C(_14_),
    .Y(_18_)
  );
  OAI21X1 _52_ (
    .A(Ci),
    .B(_12_),
    .C(_18_),
    .Y(_19_)
  );
  OAI21X1 _53_ (
    .A(_13_),
    .B(_05_),
    .C(_19_),
    .Y(S[0])
  );
  NAND2X1 _54_ (
    .A(_04_),
    .B(_11_),
    .Y(_20_)
  );
  XOR2X1 _55_ (
    .A(_18_),
    .B(_20_),
    .Y(S[1])
  );
  OAI21X1 _56_ (
    .A(A[0]),
    .B(B[0]),
    .C(Ci),
    .Y(_21_)
  );
  NAND3X1 _57_ (
    .A(_04_),
    .B(_05_),
    .C(_21_),
    .Y(_22_)
  );
  OAI21X1 _58_ (
    .A(A[1]),
    .B(B[1]),
    .C(_22_),
    .Y(_23_)
  );
  NAND2X1 _59_ (
    .A(_08_),
    .B(_00_),
    .Y(_24_)
  );
  XOR2X1 _60_ (
    .A(_23_),
    .B(_24_),
    .Y(S[2])
  );
  NAND2X1 _61_ (
    .A(_07_),
    .B(_02_),
    .Y(_25_)
  );
  NAND3X1 _62_ (
    .A(_00_),
    .B(_25_),
    .C(_16_),
    .Y(_26_)
  );
  NAND3X1 _63_ (
    .A(_00_),
    .B(_11_),
    .C(_22_),
    .Y(_27_)
  );
  INVX1 _64_ (
    .A(_25_),
    .Y(_28_)
  );
  NAND3X1 _65_ (
    .A(_08_),
    .B(_28_),
    .C(_27_),
    .Y(_29_)
  );
  NAND2X1 _66_ (
    .A(_29_),
    .B(_26_),
    .Y(S[3])
  );
endmodule

module CLA2Lvl(A, B, ci, co, S);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  input [15:0] A;
  input [15:0] B;
  wire [4:0] C;
  wire [3:0] GG;
  wire [3:0] PG;
  output [15:0] S;
  input ci;
  output co;
  AOI21X1 _06_ (
    .A(PG[0]),
    .B(ci),
    .C(GG[0]),
    .Y(_00_)
  );
  INVX1 _07_ (
    .A(_00_),
    .Y(C[1])
  );
  INVX1 _08_ (
    .A(PG[1]),
    .Y(_01_)
  );
  INVX1 _09_ (
    .A(GG[1]),
    .Y(_02_)
  );
  OAI21X1 _10_ (
    .A(_00_),
    .B(_01_),
    .C(_02_),
    .Y(C[2])
  );
  AOI21X1 _11_ (
    .A(PG[2]),
    .B(C[2]),
    .C(GG[2]),
    .Y(_03_)
  );
  INVX1 _12_ (
    .A(_03_),
    .Y(C[3])
  );
  INVX1 _13_ (
    .A(PG[3]),
    .Y(_04_)
  );
  INVX1 _14_ (
    .A(GG[3]),
    .Y(_05_)
  );
  OAI21X1 _15_ (
    .A(_03_),
    .B(_04_),
    .C(_05_),
    .Y(co)
  );
  CLA \addbit[0].bit  (
    .A(A[3:0]),
    .B(B[3:0]),
    .Ci(ci),
    .Co(),
    .GG(GG[0]),
    .PG(PG[0]),
    .S(S[3:0])
  );
  CLA \addbit[1].bit  (
    .A(A[7:4]),
    .B(B[7:4]),
    .Ci(C[1]),
    .Co(),
    .GG(GG[1]),
    .PG(PG[1]),
    .S(S[7:4])
  );
  CLA \addbit[2].bit  (
    .A(A[11:8]),
    .B(B[11:8]),
    .Ci(C[2]),
    .Co(),
    .GG(GG[2]),
    .PG(PG[2]),
    .S(S[11:8])
  );
  CLA \addbit[3].bit  (
    .A(A[15:12]),
    .B(B[15:12]),
    .Ci(C[3]),
    .Co(),
    .GG(GG[3]),
    .PG(PG[3]),
    .S(S[15:12])
  );
endmodule
