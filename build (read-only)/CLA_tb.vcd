$date
	Sun Mar 19 16:12:33 2017
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module CLA_tb $end
$var wire 1 ! err $end
$var wire 1 " ref_co $end
$var wire 4 # ref_S [3:0] $end
$var wire 4 $ S [3:0] $end
$var wire 1 % Co $end
$var reg 4 & A [3:0] $end
$var reg 4 ' B [3:0] $end
$var reg 1 ( Ci $end
$var integer 32 ) i [31:0] $end
$var integer 32 * j [31:0] $end
$var integer 32 + k [31:0] $end
$scope module uut $end
$var wire 4 , A [3:0] $end
$var wire 4 - B [3:0] $end
$var wire 1 ( Ci $end
$var wire 4 . S [3:0] $end
$var wire 4 / P [3:0] $end
$var wire 4 0 G [3:0] $end
$var wire 1 % Co $end
$var wire 5 1 C [4:0] $end
$scope begin genblk0001 $end
$upscope $end
$scope begin genblk0002 $end
$upscope $end
$scope begin genblk001 $end
$upscope $end
$scope begin genblk002 $end
$upscope $end
$scope begin genblk01 $end
$upscope $end
$scope begin genblk02 $end
$upscope $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
bx *
bx )
0(
b0 '
b0 &
0%
b0 $
b0 #
0"
0!
$end
#5
b0 *
b0 )
#10
b1 *
#15
b1 $
b1 .
0!
b1 /
b1 #
b10 *
b1 '
b1 -
#20
b10 $
b10 .
0!
b10 /
b10 #
b11 *
b10 '
b10 -
#25
b11 $
b11 .
0!
b11 /
b11 #
b1 )
b0 *
b11 '
b11 -
#30
b1 $
b1 .
b1 /
0!
b1 #
b1 *
b0 '
b0 -
b1 &
b1 ,
#35
b10 1
b10 $
b10 .
0!
b1 0
b10 #
b10 *
b1 '
b1 -
#40
b0 1
b11 $
b11 .
0!
b0 0
b11 /
b11 #
b11 *
b10 '
b10 -
#45
b110 1
b100 $
b100 .
0!
b1 0
b100 #
b10 )
b0 *
b11 '
b11 -
#50
b10 $
b10 .
b0 1
0!
b0 0
b10 /
b10 #
b1 *
b0 '
b0 -
b10 &
b10 ,
#55
b11 $
b11 .
0!
b11 /
b11 #
b10 *
b1 '
b1 -
#60
b100 1
b100 $
b100 .
0!
b10 /
b10 0
b100 #
b11 *
b10 '
b10 -
#65
b101 $
b101 .
0!
b11 /
b101 #
b11 )
b0 *
b11 '
b11 -
#70
b0 1
b11 $
b11 .
b0 0
0!
b11 #
b1 *
b0 '
b0 -
b11 &
b11 ,
#75
b110 1
b100 $
b100 .
0!
b1 0
b100 #
b10 *
b1 '
b1 -
#80
b100 1
b101 $
b101 .
0!
b10 0
b101 #
b11 *
b10 '
b10 -
#85
b110 1
b110 $
b110 .
0!
b11 0
b110 #
b1 +
b100 )
b100 *
b11 '
b11 -
#90
b111 $
b111 .
b111 #
b0 *
b0 )
b111 1
1(
#95
b1 $
b1 .
b1 1
0!
b0 0
b0 /
b1 #
b1 *
b0 '
b0 -
b0 &
b0 ,
#100
b11 1
b10 $
b10 .
0!
b1 /
b10 #
b10 *
b1 '
b1 -
#105
b1 1
b11 $
b11 .
0!
b10 /
b11 #
b11 *
b10 '
b10 -
#110
b111 1
b100 $
b100 .
0!
b11 /
b100 #
b1 )
b0 *
b11 '
b11 -
#115
b11 1
b10 $
b10 .
b1 /
0!
b10 #
b1 *
b0 '
b0 -
b1 &
b1 ,
#120
b11 $
b11 .
0!
b1 0
b11 #
b10 *
b1 '
b1 -
#125
b111 1
b100 $
b100 .
0!
b0 0
b11 /
b100 #
b11 *
b10 '
b10 -
#130
b101 $
b101 .
0!
b1 0
b101 #
b10 )
b0 *
b11 '
b11 -
#135
b11 $
b11 .
b1 1
0!
b0 0
b10 /
b11 #
b1 *
b0 '
b0 -
b10 &
b10 ,
#140
b111 1
b100 $
b100 .
0!
b11 /
b100 #
b10 *
b1 '
b1 -
#145
b101 1
b101 $
b101 .
0!
b10 /
b10 0
b101 #
b11 *
b10 '
b10 -
#150
b111 1
b110 $
b110 .
0!
b11 /
b110 #
b11 )
b0 *
b11 '
b11 -
#155
b100 $
b100 .
b0 0
0!
b100 #
b1 *
b0 '
b0 -
b11 &
b11 ,
#160
b101 $
b101 .
0!
b1 0
b101 #
b10 *
b1 '
b1 -
#165
b110 $
b110 .
0!
b10 0
b110 #
b11 *
b10 '
b10 -
#170
b111 $
b111 .
0!
b11 0
b111 #
b10 +
b100 )
b100 *
b11 '
b11 -
#1000
