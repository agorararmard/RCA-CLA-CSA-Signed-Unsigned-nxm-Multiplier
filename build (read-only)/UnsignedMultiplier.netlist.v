/* Generated by Yosys 0.6 (git sha1 UNKNOWN, clang 3.4-1ubuntu3 -fPIC -Os) */

module \$paramod\RCA\n=7 (A, B, Ci, Co, S);
  input [6:0] A;
  input [6:0] B;
  input Ci;
  output Co;
  output [6:0] S;
  wire [7:0] c;
  FA \addbit[0].bit  (
    .a(A[0]),
    .b(B[0]),
    .ci(Ci),
    .co(c[1]),
    .s(S[0])
  );
  FA \addbit[1].bit  (
    .a(A[1]),
    .b(B[1]),
    .ci(c[1]),
    .co(c[2]),
    .s(S[1])
  );
  FA \addbit[2].bit  (
    .a(A[2]),
    .b(B[2]),
    .ci(c[2]),
    .co(c[3]),
    .s(S[2])
  );
  FA \addbit[3].bit  (
    .a(A[3]),
    .b(B[3]),
    .ci(c[3]),
    .co(c[4]),
    .s(S[3])
  );
  FA \addbit[4].bit  (
    .a(A[4]),
    .b(B[4]),
    .ci(c[4]),
    .co(c[5]),
    .s(S[4])
  );
  FA \addbit[5].bit  (
    .a(A[5]),
    .b(B[5]),
    .ci(c[5]),
    .co(c[6]),
    .s(S[5])
  );
  FA \addbit[6].bit  (
    .a(A[6]),
    .b(B[6]),
    .ci(c[6]),
    .co(Co),
    .s(S[6])
  );
endmodule

module FA(a, b, ci, co, s);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  input a;
  input b;
  input ci;
  output co;
  output s;
  AND2X2 _07_ (
    .A(a),
    .B(ci),
    .Y(_03_)
  );
  NOR2X1 _08_ (
    .A(a),
    .B(ci),
    .Y(_04_)
  );
  OAI21X1 _09_ (
    .A(_03_),
    .B(_04_),
    .C(b),
    .Y(_05_)
  );
  INVX1 _10_ (
    .A(b),
    .Y(_06_)
  );
  NAND2X1 _11_ (
    .A(a),
    .B(ci),
    .Y(_00_)
  );
  OR2X2 _12_ (
    .A(a),
    .B(ci),
    .Y(_01_)
  );
  NAND3X1 _13_ (
    .A(_06_),
    .B(_00_),
    .C(_01_),
    .Y(_02_)
  );
  NAND2X1 _14_ (
    .A(_05_),
    .B(_02_),
    .Y(s)
  );
  AOI21X1 _15_ (
    .A(_06_),
    .B(_00_),
    .C(_04_),
    .Y(co)
  );
endmodule

module UnsignedMultiplier(A, B, P);
  input [3:0] A;
  input [3:0] B;
  wire [3:0] Carry;
  output [7:0] P;
  wire [6:0] \S[0] ;
  wire [6:0] \S[1] ;
  wire [6:0] \S[2] ;
  wire [6:0] \S[3] ;
  wire [6:0] \Snew[1] ;
  wire [6:0] \Snew[2] ;
  wire [6:0] \Snew[3] ;
  AND2X2 _00_ (
    .A(A[0]),
    .B(B[0]),
    .Y(\S[0] [0])
  );
  AND2X2 _01_ (
    .A(B[0]),
    .B(A[1]),
    .Y(\S[0] [1])
  );
  AND2X2 _02_ (
    .A(B[0]),
    .B(A[2]),
    .Y(\S[0] [2])
  );
  AND2X2 _03_ (
    .A(B[0]),
    .B(A[3]),
    .Y(\S[0] [3])
  );
  AND2X2 _04_ (
    .A(A[0]),
    .B(B[1]),
    .Y(\S[1] [1])
  );
  AND2X2 _05_ (
    .A(A[1]),
    .B(B[1]),
    .Y(\S[1] [2])
  );
  AND2X2 _06_ (
    .A(A[2]),
    .B(B[1]),
    .Y(\S[1] [3])
  );
  AND2X2 _07_ (
    .A(A[3]),
    .B(B[1]),
    .Y(\S[1] [4])
  );
  AND2X2 _08_ (
    .A(A[0]),
    .B(B[2]),
    .Y(\S[2] [2])
  );
  AND2X2 _09_ (
    .A(A[1]),
    .B(B[2]),
    .Y(\S[2] [3])
  );
  AND2X2 _10_ (
    .A(A[2]),
    .B(B[2]),
    .Y(\S[2] [4])
  );
  AND2X2 _11_ (
    .A(A[3]),
    .B(B[2]),
    .Y(\S[2] [5])
  );
  AND2X2 _12_ (
    .A(A[0]),
    .B(B[3]),
    .Y(\S[3] [3])
  );
  AND2X2 _13_ (
    .A(A[1]),
    .B(B[3]),
    .Y(\S[3] [4])
  );
  AND2X2 _14_ (
    .A(A[2]),
    .B(B[3]),
    .Y(\S[3] [5])
  );
  AND2X2 _15_ (
    .A(A[3]),
    .B(B[3]),
    .Y(\S[3] [6])
  );
  \$paramod\RCA\n=7  \addbit[0].bit  (
    .A({ 3'b000, \S[0] [3:0] }),
    .B({ 2'b00, \S[1] [4:1], 1'b0 }),
    .Ci(1'b0),
    .Co(Carry[1]),
    .S(\Snew[1] )
  );
  \$paramod\RCA\n=7  \addbit[1].bit  (
    .A(\Snew[1] ),
    .B({ 1'b0, \S[2] [5:2], 2'b00 }),
    .Ci(Carry[1]),
    .Co(Carry[2]),
    .S(\Snew[2] )
  );
  \$paramod\RCA\n=7  \addbit[2].bit  (
    .A(\Snew[2] ),
    .B({ \S[3] [6:3], 3'b000 }),
    .Ci(Carry[2]),
    .Co(P[7]),
    .S(\Snew[3] )
  );
  assign P[6:0] = \Snew[3] ;
endmodule
